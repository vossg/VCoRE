/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2006 by the OpenSG Forum                 *
 *                                                                           *
 *                            www.opensg.org                                 *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#ifndef _OSGVCRENDERERFIELDS_H_
#define _OSGVCRENDERERFIELDS_H_
#ifdef __sgi
#pragma once
#endif

#include "OSGConfig.h"
#include "OSGVCoRERendererDef.h"

#include "OSGFieldContainerFields.h"
#include "OSGPointerSField.h"
#include "OSGPointerMField.h"


VCORE_BEGIN_NAMESPACE

OSG_IMPORT_NAMESPACE;

class VCRenderer;

OSG_GEN_CONTAINERPTR(VCRenderer);

VCORE_END_NAMESPACE

OSG_BEGIN_NAMESPACE

VCORE_IMPORT_NAMESPACE;
/*! \ingroup GrpVCoreRendererFieldTraits
    \ingroup GrpLibOSGVCoRERenderer
 */
template <>
struct FieldTraits<VCRenderer *, nsVCoRE> :
    public FieldTraitsFCPtrBase<VCRenderer *, nsVCoRE>
{
  private:

    static PointerType             _type;

  public:

    typedef FieldTraits<VCRenderer *, nsVCoRE>  Self;

    enum                        { Convertible = NotConvertible };

    static OSG_VCORERENDERER_DLLMAPPING DataType &getType(void);

    template<typename RefCountPolicy> inline
    static const Char8    *getSName     (void);

    template<typename RefCountPolicy> inline
    static const Char8    *getMName     (void);

};

template<> inline
const Char8 *FieldTraits<VCRenderer *, nsVCoRE>::getSName<RecordedRefCountPolicy>(void)
{
    return "SFRecVCRendererPtr"; 
}

template<> inline
const Char8 *FieldTraits<VCRenderer *, nsVCoRE>::getSName<UnrecordedRefCountPolicy>(void)
{
    return "SFUnrecVCRendererPtr"; 
}

template<> inline
const Char8 *FieldTraits<VCRenderer *, nsVCoRE>::getSName<WeakRefCountPolicy>(void)
{
    return "SFWeakVCRendererPtr"; 
}

template<> inline
const Char8 *FieldTraits<VCRenderer *, nsVCoRE>::getSName<NoRefCountPolicy>(void)
{
    return "SFUnrefdVCRendererPtr"; 
}

template<> inline
const Char8 *FieldTraits<VCRenderer *, nsVCoRE>::getMName<RecordedRefCountPolicy>(void)
{
    return "MFRecVCRendererPtr"; 
}

template<> inline
const Char8 *FieldTraits<VCRenderer *, nsVCoRE>::getMName<UnrecordedRefCountPolicy>(void)
{
    return "MFUnrecVCRendererPtr"; 
}

template<> inline
const Char8 *FieldTraits<VCRenderer *, nsVCoRE>::getMName<WeakRefCountPolicy>(void)
{
    return "MFWeakVCRendererPtr"; 
}

template<> inline
const Char8 *FieldTraits<VCRenderer *, nsVCoRE>::getMName<NoRefCountPolicy>(void)
{
    return "MFUnrefdVCRendererPtr"; 
}


OSG_END_NAMESPACE

VCORE_BEGIN_NAMESPACE

OSG_IMPORT_NAMESPACE;

#ifndef DOXYGEN_SHOULD_SKIP_THIS
/*! \ingroup GrpVCoreRendererFieldSFields */
typedef PointerSField<VCRenderer *,
                      RecordedRefCountPolicy, nsVCoRE  > SFRecVCRendererPtr;
/*! \ingroup GrpVCoreRendererFieldSFields */
typedef PointerSField<VCRenderer *,
                      UnrecordedRefCountPolicy, nsVCoRE> SFUnrecVCRendererPtr;
/*! \ingroup GrpVCoreRendererFieldSFields */
typedef PointerSField<VCRenderer *,
                      WeakRefCountPolicy, nsVCoRE      > SFWeakVCRendererPtr;
/*! \ingroup GrpVCoreRendererFieldSFields */
typedef PointerSField<VCRenderer *,
                      NoRefCountPolicy, nsVCoRE        > SFUncountedVCRendererPtr;


/*! \ingroup GrpVCoreRendererFieldMFields */
typedef PointerMField<VCRenderer *,
                      RecordedRefCountPolicy, nsVCoRE  > MFRecVCRendererPtr;
/*! \ingroup GrpVCoreRendererFieldMFields */
typedef PointerMField<VCRenderer *,
                      UnrecordedRefCountPolicy, nsVCoRE> MFUnrecVCRendererPtr;
/*! \ingroup GrpVCoreRendererFieldMFields */
typedef PointerMField<VCRenderer *,
                      WeakRefCountPolicy, nsVCoRE      > MFWeakVCRendererPtr;
/*! \ingroup GrpVCoreRendererFieldMFields */
typedef PointerMField<VCRenderer *,
                      NoRefCountPolicy, nsVCoRE        > MFUncountedVCRendererPtr;




#else // these are the doxygen hacks

/*! \ingroup GrpVCoreRendererFieldSFields \ingroup GrpLibOSGVCoRERenderer */
struct SFRecVCRendererPtr : 
    public PointerSField<VCRenderer *,
                         RecordedRefCountPolicy> {};
/*! \ingroup GrpVCoreRendererFieldSFields \ingroup GrpLibOSGVCoRERenderer */
struct SFUnrecVCRendererPtr : 
    public PointerSField<VCRenderer *,
                         UnrecordedRefCountPolicy> {};
/*! \ingroup GrpVCoreRendererFieldSFields \ingroup GrpLibOSGVCoRERenderer */
struct SFWeakVCRendererPtr :
    public PointerSField<VCRenderer *,
                         WeakRefCountPolicy> {};
/*! \ingroup GrpVCoreRendererFieldSFields \ingroup GrpLibOSGVCoRERenderer */
struct SFUncountedVCRendererPtr :
    public PointerSField<VCRenderer *,
                         NoRefCountPolicy> {};


/*! \ingroup GrpVCoreRendererFieldMFields \ingroup GrpLibOSGVCoRERenderer */
struct MFRecVCRendererPtr :
    public PointerMField<VCRenderer *,
                         RecordedRefCountPolicy  > {};
/*! \ingroup GrpVCoreRendererFieldMFields \ingroup GrpLibOSGVCoRERenderer */
struct MFUnrecVCRendererPtr :
    public PointerMField<VCRenderer *,
                         UnrecordedRefCountPolicy> {};
/*! \ingroup GrpVCoreRendererFieldMFields \ingroup GrpLibOSGVCoRERenderer */
struct MFWeakVCRendererPtr :
    public PointerMField<VCRenderer *,
                         WeakRefCountPolicy      > {};
/*! \ingroup GrpVCoreRendererFieldMFields \ingroup GrpLibOSGVCoRERenderer */
struct MFUncountedVCRendererPtr :
    public PointerMField<VCRenderer *,
                         NoRefCountPolicy        > {};



#endif // these are the doxygen hacks

VCORE_END_NAMESPACE

#endif /* _OSGVCRENDERERFIELDS_H_ */
